/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-19 06:22:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "link.html", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/signup.css\">\r\n");
      out.write("<script src=\"js/signup.js\" defer></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class='wrap'>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.html", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div id=\"contents\">\r\n");
      out.write("			<form method=\"post\" action=\"index.jsp\" name=\"signupForm\" id='signupForm'>\r\n");
      out.write("				<div class='signup'>\r\n");
      out.write("					<div class=\"title\">\r\n");
      out.write("						<h3>회원 가입</h3>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"choice\">\r\n");
      out.write("						<input type=\"radio\" name=\"userType\" id='userType1' value=\"user\" hidden>\r\n");
      out.write("						<label for=\"userType1\" class=\"userChoice choiceBtn\">일반회원</label>\r\n");
      out.write("						\r\n");
      out.write("						<input type=\"radio\" name=\"userType\" id='userType2' value=\"admin\" hidden>\r\n");
      out.write("						<label for=\"userType2\" class=\"adminChoice choiceBtn\">관리자</label>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"user\">\r\n");
      out.write("						<p class=\"main-text\">이름</p>\r\n");
      out.write("						<input type=\"text\" placeholder=\"이름\" class=\"name\" id='username' required>\r\n");
      out.write("						<p class='sub-text'>한글 이름 2~4자 이내, 영문 이름 2~10자 이내</p>\r\n");
      out.write("						<p class=\"error-text\"></p>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"userBirth\">\r\n");
      out.write("						<p class=\"main-text\">생년월일</p>\r\n");
      out.write("						<input type=\"date\" id='birth' required>\r\n");
      out.write("						<!-- 생년월일 8자리 입력 받기 -->\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"gender\">\r\n");
      out.write("						<p class=\"main-text\">성별</p>\r\n");
      out.write("						<span class=\"left\">\r\n");
      out.write("							<input type=\"radio\" class=\"man\" name='gender' value='M'>\r\n");
      out.write("							<span>남자</span>\r\n");
      out.write("						</span> \r\n");
      out.write("						<span class=\"left\">\r\n");
      out.write("							<input type=\"radio\" class=\"woman\" name='gender' value='F'>\r\n");
      out.write("							<span>여자</span>\r\n");
      out.write("						</span>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"id\">\r\n");
      out.write("						<p class=\"main-text\">아이디</p>\r\n");
      out.write("						<div class='input-Wrap'>\r\n");
      out.write("							<input type=\"text\" placeholder=\"아이디\" id='userid' required>\r\n");
      out.write("							<button>중복확인</button>\r\n");
      out.write("						</div>\r\n");
      out.write("						<p class=\"sub-text\">4~12자 / 영문 소문자(숫자 조합 가능)</p>\r\n");
      out.write("						<p class=\"error-text\"></p>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"pw\">\r\n");
      out.write("						<p class=\"main-text\">비밀번호</p>\r\n");
      out.write("						<input type=\"password\" placeholder=\"비밀번호\" class=\"password\" id='userpw' required>\r\n");
      out.write("						<p class=\"error-text\"></p>\r\n");
      out.write("						<input type=\"password\" placeholder=\"비밀번호 확인\" class=\"password_ok\" id='userpwOk' required readonly>\r\n");
      out.write("						<p class=\"sub-text\">6~20자 / 영문 대문자, 소문자, 숫자, 특수문자 사용 가능</p>\r\n");
      out.write("						<p class=\"error-text duple\"></p>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"email\">\r\n");
      out.write("						<p class=\"main-text\">이메일</p>\r\n");
      out.write("						<div class='input-Wrap'>\r\n");
      out.write("							<input type=\"text\" placeholder=\"이메일\" id='email' required>\r\n");
      out.write("							<p>@</p>\r\n");
      out.write("							<select id=\"domain\" required>\r\n");
      out.write("								<option value=\"\">직접 선택</option>\r\n");
      out.write("								<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("								<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("								<option value=\"daum.net\">daum.net</option>\r\n");
      out.write("								<option value=\"yahoo.com\">yahoo.com</option>								\r\n");
      out.write("								<option value=\"nate.com\">nate.com</option>								\r\n");
      out.write("							</select>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"phone\">\r\n");
      out.write("					<p class=\"main-text\">휴대폰 번호</p>\r\n");
      out.write("						<input type=\"text\" placeholder=\"휴대폰 번호\" id='phone' required>\r\n");
      out.write("						<p class=\"error-text\"></p>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"ok\">\r\n");
      out.write("						<button id='register' onclick=\"register()\">가입하기</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- contents영역종료 -->\r\n");
      out.write("\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.html", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
